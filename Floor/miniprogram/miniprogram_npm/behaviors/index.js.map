{"version":3,"sources":["behaviors.js","lib/Behaviors.js","lib/Stylesheet.js","lib/Grammar.js","lib/Translator.js","lib/Attributes.js","lib/Bindings.js","lib/Relative.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,AENA,ADGA;AFOA,ACHA,AENA,ADGA;AFOA,ACHA,AENA,ADGA;AFOA,ACHA,AENA,ADGA,AENA;AJaA,ACHA,AENA,ADGA,AENA;AJaA,ACHA,AENA,ADGA,AENA;AJaA,AKfA,AJYA,AENA,ADGA,AENA;AJaA,AKfA,AJYA,AENA,ADGA,AENA;AJaA,AKfA,AJYA,AENA,ADGA,AENA;AJaA,AKfA,AJYA,AKfA,AHSA,ADGA,AENA;AJaA,AKfA,AJYA,AKfA,AHSA,ADGA,AENA;AJaA,AKfA,AJYA,AKfA,AHSA,ADGA,AENA;AJaA,AKfA,AJYA,AKfA,AHSA,AIZA,ALeA,AENA;AJaA,AKfA,AJYA,AKfA,AHSA,AIZA,ALeA,AENA;ACFA,AJYA,AKfA,AHSA,AIZA,ALeA,AENA;ACFA,AJYA,AKfA,AHSA,AIZA,ALeA,AENA;ACFA,AJYA,AKfA,AHSA,AIZA,ALeA,AENA;ACFA,AJYA,AKfA,AHSA,AIZA,ALeA,AENA;ACFA,AJYA,AKfA,AHSA,AIZA,ALeA,AENA;ACFA,AJYA,AKfA,AHSA,AIZA,ALeA,AENA;ACFA,AJYA,AKfA,AHSA,AIZA,ALeA,AENA;ACFA,AJYA,AKfA,AHSA,AIZA,ALeA,AENA;ACFA,AJYA,AKfA,AHSA,AIZA,ALeA,AENA;ACFA,AJYA,AKfA,AHSA,AIZA,ALeA,AENA;ACFA,AJYA,AKfA,AHSA,AIZA,ALeA,AENA;ACFA,AJYA,AKfA,AHSA,AIZA,ALeA,AENA;ACFA,AJYA,AKfA,AHSA,AIZA,ALeA,AENA;ACFA,AJYA,AKfA,AHSA,AIZA,ALeA,AENA;ACFA,AJYA,AKfA,AHSA,AIZA,ALeA,AENA;ACFA,AJYA,AKfA,AHSA,AIZA,ALeA,AENA;ACFA,AJYA,AKfA,AHSA,AIZA,ALeA,AENA;ACFA,AJYA,AKfA,AHSA,AIZA,ALeA,AENA;ACFA,ACHA,AHSA,AIZA,ALeA,AENA;ACFA,ACHA,ACHA,ALeA,AENA;ACFA,ACHA,ACHA,ALeA,AENA;ACFA,ACHA,ACHA,ALeA,AENA;ACFA,ACHA,ACHA,ALeA,AENA;ACFA,AENA,ALeA,AENA;ACFA,AENA,ALeA,AENA;ACFA,AENA,ALeA,AENA;ACFA,AENA,ALeA,AENA;ACFA,AENA,ALeA;AGRA,AENA,ALeA;AGRA,AENA,ALeA;AGRA,AENA,ALeA;AGRA,AENA,ALeA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["(function() {\n\n  var Behaviors = require(\"./lib/Behaviors\");\n  Behaviors.Stylesheet = require(\"./lib/Stylesheet\");\n  Behaviors.Translator = require(\"./lib/Translator\");\n  Behaviors.Grammar = require(\"./lib/Grammar\");\n  Behaviors.Bindings = require(\"./lib/Bindings\");\n  Behaviors.Relative = require(\"./lib/Relative\");\n  Behaviors.Attributes = require(\"./lib/Attributes\");\n\n  // export module\n  if (typeof module !== \"undefined\" && typeof module.exports !== \"undefined\") {\n    module.exports = Behaviors;\n  } else {\n    window.Behaviors = Behaviors;\n  }\n\n  // register onload event\n  if (typeof window !== \"undefined\") {\n    window.addEventListener(\"load\", Behaviors.load);\n  }\n\n})();","\n\nvar _ = require(\"underscore\");\n\nvar Stylesheet = require(\"./Stylesheet\");\n\n/**\n * JavaScript Behaviors Library\n *\n * @copyright 2014 Stephen Riesenberg, All Rights Reserved\n * @author Dan Yoder\n * @author Stephen Riesenberg\n * @version 0.7\n * @license MIT\n * @link http://code.google.com/p/cruiser/wiki/Behaviors\n * @link https://github.com/sjohnr/behaviors.js\n */\nvar Behaviors = {\n  /**\n   * Load and process Behaviors Stylesheets.\n   */\n  load: function() {\n    _.chain(document.getElementsByTagName(\"link\"))\n        .filter(Stylesheet.test)\n        .pluck(\"href\")\n        .each(Behaviors.process);\n  },\n  /**\n   * Load an individual Behaviors Stylesheet file by URL.\n   */\n  process: function(href) {\n    Stylesheet.load(href);\n  }\n};\n\nconsole.log(\"Loaded Behaviors module\");\nmodule.exports = Behaviors;\n","\n\nvar $ = require(\"jquery\");\nvar _ = require(\"underscore\");\nvar _camelize = require(\"underscore.string/camelize\");\n_.camelize = _camelize;\n\nvar Grammar = require(\"./Grammar\");\nvar Attributes = require(\"./Attributes\");\n\nvar Stylesheet = {\n  /**\n   * Determine if the given <link> element is a Behaviors Stylesheet.\n   *\n   * @param link A <link> element to test\n   */\n  test: function(link) {\n    return link.rel == \"behaviors\";\n  },\n  /**\n   * Load the contents of a Behaviors Styleseheet via Ajax\n   * and process the result.\n   *\n   * @param url The URL to load\n   */\n  load: function(url) {\n    $.get(url, {}, Stylesheet.process);\n  },\n  /**\n   * Process an Ajax response as a Behaviors Stylesheet.\n   *\n   * @param response The Ajax response\n   */\n  process: function(response) {\n    var rules = Stylesheet.parse(response);\n    _.each(rules, function(attributes, selector) {\n      var elements = $(selector);\n      _.each(elements, function(e) {\n        if (!e.binding) {\n          e.binding = e;\n        }\n        _.each(attributes, function(value, name) {\n          var fn = Attributes[_.camelize(name)] || Attributes[name];\n          try {\n            fn ? fn(e, value, name) : null;\n          } catch (ex) {\n            if (window.console) {\n              console.log(ex);\n              console.log(\"@ \" + selector + \" { \" + name + \": \" + value + \"; }\");\n            }\n          }\n        });\n      });\n    });\n  },\n  /**\n   * Parse a Behaviors Stylesheet.\n   *\n   * @param s The contents of the stylesheet file\n   */\n  parse: function(s) {\n    return _.first(Grammar.parse(s));\n  }\n};\n\nconsole.log(\"Loaded Stylesheet module\");\nmodule.exports = Stylesheet;\n","\n\nvar g = {}, o = require(\"parser-generator\").Operators, t = require(\"./Translator\");\n\n// basic tokens\ng.lbrace = o.token(\"{\");\ng.rbrace = o.token(\"}\");\ng.lparen = o.token(/\\(/);\ng.rparen = o.token(/\\)/);\ng.colon = o.token(\":\");\ng.semicolon = o.token(\";\");\n// comments\ng.inlineComment = o.token(/\\x2F\\x2F[^\\n]*\\n/);\ng.multilineComment = o.token(/\\x2F\\x2A(.|\\n)*?\\x2A\\x2F/);\ng.comments = o.ignore(o.any(g.inlineComment, g.multilineComment));\n// attributes\ng.attrName = o.token(/[\\w\\-\\d]+/);\ng.attrValue = o.token(/[^;}]+/);\ng.attr = o.each(g.attrName, g.colon, g.attrValue, g.semicolon);\ng.attrList = o.many(o.any(g.comments, g.attr));\n// style rules\ng.style = o.process(o.between(g.lbrace, g.attrList, g.rbrace), t.style);\ng.selector = o.token(/[^\\{]+/);\ng.rule = o.each(g.selector, g.style);\ng.rules = o.process(o.many(o.any(g.comments, g.rule)), t.rules);\n\nvar Grammar = {\n  parse: g.rules\n};\n\nconsole.log(\"Loaded Grammar module\");\nmodule.exports = Grammar;\n","\n\nvar _ = require(\"underscore\");\n\nvar Translator = {\n  /**\n   * Translate style attributes to an associative array.\n   *\n   * @param ax The attributes parse tree\n   */\n  style: function (ax) {\n    return _.reduce(ax, function (h, a) {\n      if (a) {\n        h[a[0]] = a[2];\n      }\n\n      return h;\n    }, {});\n  },\n  /**\n   * Translate rules to an associative array.\n   *\n   * @param rx The rules parse tree\n   */\n  rules: function (rx) {\n    return _.reduce(rx, function (h, r) {\n      if (r) {\n        h[r[0]] = _.extend(h[r[0]] || {}, r[1]);\n      }\n\n      return h;\n    }, {});\n  }\n};\n\nconsole.log(\"Loaded Translator module\");\nmodule.exports = Translator;\n","\n\nvar $ = require(\"jquery\");\nvar _ = require(\"underscore\");\nvar Bindings = require(\"./Bindings\");\nvar Relative = require(\"./Relative\");\n\n/**\n * Adds an event handler to the element: blur, change, click, etc.\n *\n * @param h The handler\n * @param e The element\n * @param v The function name to invoke\n */\nfunction observe(h, e, v) {\n  $(e).on(h, _.bind(e.binding[v], e.binding));\n}\n\n/**\n * Adds relative attributes: height, width, opacity...\n *\n * @param a The attribute name\n * @param e The element\n * @param v The function spec, e.g. \"minimum( div.sidebar )\"\n */\nfunction relative(a, e, v) {\n  var f = parseFunction(v);\n  if (!f) {\n    return;\n  }\n  var fname = f[1], s = f[2];\n  var fn = Relative[fname];\n  if (fn) {\n    fn(a, e, s);\n  }\n}\n\nfunction parseFunction(s) {\n  return s.match(/(\\w+)\\s*\\(\\s*([^\\)]+)\\s*\\)/);\n}\n\nvar Attributes = {\n  /**\n   * Adds a binding to an element.\n   *\n   * @param e The element\n   * @param v The function spec, e.g. \"new( TabControl )\"\n   */\n  binding: function(e, v) {\n    var f = parseFunction(v);\n    if (!f) {\n      return;\n    }\n    var fname = f[1], x = f[2];\n    var fn = Bindings[fname];\n    if (fn) {\n      fn(e, x);\n    }\n  },\n  /**\n   * Adds a callback when the element is loaded.\n   *\n   * @param e The element\n   * @param v The function, e.g. \"addMenuItem\"\n   */\n  load: function(e, v) {\n    if (e.binding[v]) {\n      e.binding[v](e);\n    }\n  },\n  /**\n   * Give an element focus.\n   *\n   * @param e The element\n   * @param v Dummy argument, \"true\" or \"yes\"\n   */\n  hasFocus: function(e, v) {\n    v = v.toLowerCase();\n    if (v == \"true\" || v == \"yes\") {\n      e.focus();\n    }\n  }\n};\n\nfunction $w(s) {\n  return _(s.split(\" \"));\n}\n\n//\n// Meta functions for observing events\n//\n$w(\"blur change click dblclick contextmenu focus keydown keypress keyup mousedown mousemove mouseout mouseover mouseup resize\").each(function(s) {\n  Attributes[s] = _.partial(observe, s);\n});\n\n//\n// Meta functions for maintaining relative size\n//\n$w(\"height width opacity font-size letter-spacing line-height text-indent word-spacing border-width border-top-width border-right-width border-bottom-width border-left-width outline-width padding padding-top padding-right padding-bottom padding-left margin margin-top margin-right margin-bottom margin-left top right bottom left max-height max-width min-height min-width z-index\").each(function(s) {\n  Attributes[s] = _.partial(relative, s);\n});\n\nconsole.log(\"Loaded Attributes module\");\nmodule.exports = Attributes;\n","\n\nvar $ = require(\"jquery\");\nvar _ = require(\"underscore\");\n\n/**\n * Set the binding property of an object\n *\n * @param o The object or element to bind to\n * @param t The target object or element being bound\n */\nfunction bind(o, t) {\n  o.binding = ((t instanceof Element) && t.binding) ? t.binding : t;\n}\n\nvar Bindings = {\n  \"new\":      function(e, x) { bind(e, eval(\"new \"+x+\"(e)\")); },\n  \"object\":   function(e, x) { bind(e, eval(x)); },\n  \"select\":   function(e, x) { bind(e, _.first($(x))); },\n  \"up\":       function(e, x) { bind(e, _.first($(e).closest(x))); },\n  \"down\":     function(e, x) { bind(e, _.first($(e).find(x))); },\n  \"previous\": function(e, x) { bind(e, _.first($(e).prevAll(x))); },\n  \"next\":     function(e, x) { bind(e, _.first($(e).nextAll(x))); }\n};\n\nconsole.log(\"Loaded Bindings module\");\nmodule.exports = Bindings;\n","\n\nvar $ = require(\"jquery\");\nvar _ = require(\"underscore\");\n\n/**\n * Adds relative attribute functions: minimum, maximum, equals.\n *\n * @param c The comparator function\n * @param a The attribute name\n * @param e1 The first element (the element to act upon)\n * @param s The selector to evaluate as an element to compare to\n */\nfunction apply(c, a, e1, s) {\n  var e2 = _.first($(s)); if (!e2) return;\n  if (c(parseInt(e1.css(a)), parseInt(e2.css(a)))) {\n    e1.css(a, e2.css(a));\n  }\n}\n\nvar Relative = _.reduce({\n  \"minimum\": function(a, b) { return a < b; },\n  \"maximum\": function(a, b) { return a > b; },\n  \"equals\":  function(a, b) { return a == b; }\n}, function(h, fn, a) {\n  return h[a] = _.partial(apply, fn);\n}, {});\n\n// alias equals\nRelative.equal = Relative.equals;\n\nconsole.log(\"Loaded Relative module\");\nmodule.exports = Relative;\n"]}